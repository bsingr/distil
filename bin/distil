#!/usr/bin/env ruby

LIB_DIR= File.expand_path(File.join(File.dirname(__FILE__), "..", "lib"))
VENDOR_DIR= File.expand_path(File.join(File.dirname(__FILE__), "..", "vendor"))
ASSETS_DIR= File.expand_path(File.join(File.dirname(__FILE__), "..", "assets"))
APP_NAME= File.basename($0)

$:.unshift(LIB_DIR)

require "distil"

arg_settings= {}
project_file= nil
args= []

ARGV.each { |v|
  if (!v[/^-/])
    args << v
    next
  end
  
  v= v.gsub(/^-+/, '')
  v.gsub!("-", "_")
  
  key,value= v.split("=")
  if (!value)
    value= true
  end
  
  if ("f"==key || "file"==key || "buildfile"==key)
    project_file= value
    next
  end
  
  arg_settings[key]= value
}

def find_project_file(dir=nil)
  dir ||= Dir.pwd
  
  while dir.length > 1
    Dir.glob(File.join(dir, '*.jsproj')) { |file|
      return file if File.basename(dir)===File.basename(file, '.jsproj')
    }
    dir = File.dirname(dir)
  end
  
end

  
# Change working directory to the folder containing the build YML file.
project_file||= find_project_file

if !project_file
  puts "#{APP_NAME}: can't find project file"
  exit
end

project= Distil::DistilProject.new(project_file, arg_settings)

if 0==args.length
  args << "build"
end

args.each { |cmd|
  project.send cmd
}
